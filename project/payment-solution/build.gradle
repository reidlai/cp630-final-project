plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5' 
    id 'io.spring.dependency-management' version '1.1.3'
    id 'maven-publish'  
    id 'org.openapi.generator' version '7.0.1'
}

group = 'cp630oc.paymentsolution'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    // ONNX Runtime
    implementation 'com.microsoft.onnxruntime:onnxruntime:1.16.3'

    // Spring Boot starters
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    // Logging
    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.slf4j:slf4j-api'

    // JPA
    implementation 'org.hibernate.orm:hibernate-core:6.2.13.Final'
    implementation 'org.flywaydb:flyway-core:9.16.0'

    // Thymeleaf template engine
    // implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    // OpenAPI Generator
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // ONNIX
    implementation 'com.microsoft.onnxruntime:onnxruntime:1.16.3'
    

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/payment-solution-apis.yaml"
    outputDir = "$buildDir/generated-sources/openapi"
    apiPackage = "cp630oc.paymentsolution.paymentprocessingservice.api"
    modelPackage = "cp630oc.paymentsolution.paymentprocessingservice.model"
    configOptions = [
        dateLibrary: "java8",
        interfaceOnly: "true",
        useSpringBoot3: "true",
        skipDefaultInterface: "true",
        useTags: "true",
        documentationProvider: "springdoc",
        openApiNullable: "false",
        useOptional: "false",
        swaggerAnnotations: "false",
        useSpringController: "true"
    ]
    templateDir = "$projectDir/src/main/resources/api"
}

sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated/src/main/java"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    enabled = true
    archiveBaseName = 'app'
    archiveVersion = ''
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // Add this line
}

jar {
    enabled = false
}

springBoot {
    mainClass = 'cp630oc.paymentsolution.Application'
}

tasks.named('javadocJar', Jar) {
    archiveBaseName = 'payment-solution'
    archiveVersion = project.version
    destinationDirectory = file('build/libs')
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

publishing {
    publications {
        mavenJar(MavenPublication) {
            from components.java
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += ["$buildDir/generated-sources/openapi/src/main/java"]
        }
    }
}


compileJava.dependsOn('openApiGenerate')